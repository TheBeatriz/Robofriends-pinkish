{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","console","log","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACD,sBAAKC,UAAW,sDAAhB,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,KAChD,gCACA,mCAAMF,KACN,kCAAKC,EAAL,cCScK,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACtC,OAAO,cAAC,EAAD,CACPT,GAAIK,EAAOI,GAAGT,GACdF,KAAOO,EAAOI,GAAGX,KACjBC,MAAQM,EAAOI,GAAGV,OAHCU,MAMnB,OACC,8BACCH,KCEYI,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKX,UAAW,MAAhB,SACA,uBAAOA,UAAW,0BAClBY,KAAM,SACNC,YAAa,gBACbC,SAAYH,OCKCI,G,KAVA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,SAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAxE,SAECJ,EAAMK,aCyCMC,E,kDAzCd,aAAgB,IAAD,8BACd,gBAeDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,QACzCC,QAAQC,IAAIL,EAAME,OAAOC,QAhBzB,EAAKG,MAAQ,CACZ1B,OAAQ,GACRM,YAAY,IAJC,E,gEAQM,IAAD,OACnBqB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACrB,OAAQ+B,S,+BAY7B,IAAD,OACFC,EAAiBC,KAAKP,MAAM1B,OAAOkC,QAAO,SAAAC,GAC9C,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKX,MAAMpB,YAAY8B,kBAElE,OACA,sBAAKxC,UAAU,KAAf,UACA,oBAAIA,UAAU,UAAd,0BACA,cAAC,EAAD,CAAWW,aAAe0B,KAAKd,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAASgC,a,GAjCHM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OAAO,cAAC,IAAMC,WAAP,UACf,cAAE,EAAF,MAA4BC,SAASC,eAAe,SAMrDZ,K","file":"static/js/main.51186149.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({name, email, id}) => {\n\treturn (\n<div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n <img alt='robots' src= {`https://robohash.org/${id}`} />\n <div>\n <h2> {name}</h2>\n <p> {email} </p>\n </div>\n </div>\n\t\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\nconst cardComponent = robots.map((user,i) => {\n\treturn <Card key= {i} \n\tid={robots[i].id} \n\tname= {robots[i].name} \n\temail= {robots[i].email} />\n} )\n\n\treturn (\n\t\t<div>\n\t\t{cardComponent}\n\t</div>\n\t)\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) => {\n\treturn (\n\t\t<div className= 'pa2' > \n\t\t<input className= 'pa3 ba b--green bg-pink'\n\t\ttype= 'search' \n\t\tplaceholder= 'search robots'\n\t\tonChange = {searchChange}\n\t\t/>\n\t\t</div>\n\t\t)\n}\n\n\nexport default SearchBox;","//aula 79//\nimport React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style = {{overflow: 'Scroll', border: '5px solid magenta', height: '500px'}}>\n\n\t\t{props.children}\n\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport Scroll from './Scroll';\n\nclass App extends Component {\n\tconstructor () {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield:''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots: users}));\n\t\t\n\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value});\n\t\tconsole.log(event.target.value);\n\t\t\n\t}\n\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\t return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\t\treturn (\n\t\t<div className='tc'> \n\t\t<h1 className='pink f1'> RoboFriends</h1>\n\t\t<SearchBox searchChange= {this.onSearchChange} />\n\t\t<Scroll>\n\t\t<CardList robots= {filteredRobots}/> \n\t\t</Scroll>\n\t\t</div>\n\t\t)\n\t}\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport './App.css'\n\n\n\nReactDOM.render(<React.StrictMode>\n\t< App /></React.StrictMode>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}